stages:
  - build
  - test
  - deploy


# build and push the container to harbor when a tag is created
# build:
#   stage: build
#   image: docker:19.03.12-dind
#   services:
#     - docker:19.03.12-dind
#   variables:
#     DOCKER_IMG: harbor.lji.org/iedb-public/bcrmatch:$CI_COMMIT_TAG
#   script:
#     # - docker logout $DOCKER_IMG
#     # - docker login -u $HARBOR_USER -p $HARBOR_PWD $DOCKER_IMG
#     - docker build -t $DOCKER_IMG .
#   #   - docker push $DOCKER_IMG
#   # rules:
#   #   # run this only for tags
#   #   - if: '$CI_COMMIT_TAG'
# build:
#   stage: build
#   image: docker:19.03.12-dind
#   services:
#     - docker:19.03.12-dind
#   script:
#     - docker build -t bcrmatch_img .
#     - docker save -o bcrmatch_img.tar bcrmatch_img
#   artifacts:
#     paths:
#       - bcrmatch_img.tar
#     expire_in: 30 minutes


test:
  stage: test
  image: python:3.8.5
  script:
    - python -m venv venv
    - source venv/bin/activate
    - pip install -r requirements.txt
    - pwd
    - pip install pandas
    - pip show pandas
    - ls .
    - python -m unittest discover -s tests
    # - docker load -i bcrmatch_img.tar
    # - docker run --rm bcrmatch_img python -m unittest discover /src/bcrmatch/tests -s test_basic_prediction.py  # Run the unit tests inside the container


# deploy:
#   image: docker:19.03.12-dind
#   services:
#     - docker:19.03.12-dind
#   variables:
#     DOCKER_IMG: harbor.lji.org/iedb-public/bcrmatch:$CI_COMMIT_TAG
#   script:
#     - docker logout $DOCKER_IMG
#     - docker login -u $HARBOR_USER -p $HARBOR_PWD $DOCKER_IMG
#     - docker tag bcrmatch_img $DOCKER_IMG
#     - docker push $DOCKER_IMG
#   only:
#     - tags
#   when: on_success